//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EverProV2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Asignador_SGDEntities : DbContext
    {
        public Asignador_SGDEntities()
            : base("name=Asignador_SGDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<CodigosCampo> CodigosCampo { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Parametros> Parametros { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tb_Formularios> tb_Formularios { get; set; }
        public virtual DbSet<tbAreas> tbAreas { get; set; }
        public virtual DbSet<tbHistorial> tbHistorial { get; set; }
        public virtual DbSet<tbProcPorProducto> tbProcPorProducto { get; set; }
        public virtual DbSet<tbProducto> tbProducto { get; set; }
        public virtual DbSet<tbUsuariosPorLider> tbUsuariosPorLider { get; set; }
        public virtual DbSet<TiposCampo> TiposCampo { get; set; }
        public virtual DbSet<ts_Campos> ts_Campos { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<UsuariosBloqueados> UsuariosBloqueados { get; set; }
        public virtual DbSet<UsuariosHistorico> UsuariosHistorico { get; set; }
        public virtual DbSet<RolesMenu> RolesMenu { get; set; }
        public virtual DbSet<tbClasificaNivFuncionario> tbClasificaNivFuncionario { get; set; }
        public virtual DbSet<tbLider> tbLider { get; set; }
        public virtual DbSet<tbLibranza> tbLibranza { get; set; }
        public virtual DbSet<tbFormalizacion> tbFormalizacion { get; set; }
        public virtual DbSet<tbTipologiaConvenio> tbTipologiaConvenio { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<tbAns> tbAns { get; set; }
        public virtual DbSet<tbParametrosServicio> tbParametrosServicio { get; set; }
        public virtual DbSet<tbTipoAusentismo> tbTipoAusentismo { get; set; }
        public virtual DbSet<tbAsignacionCasos> tbAsignacionCasos { get; set; }
        public virtual DbSet<tbAuditoriaConexion> tbAuditoriaConexion { get; set; }
        public virtual DbSet<Campos> Campos { get; set; }
        public virtual DbSet<Campos_Listas> Campos_Listas { get; set; }
        public virtual DbSet<Formulario_Campos> Formulario_Campos { get; set; }
        public virtual DbSet<HistModuloEverProLideresRRHH> HistModuloEverProLideresRRHH { get; set; }
        public virtual DbSet<tbParamNivelConvenio> tbParamNivelConvenio { get; set; }
        public virtual DbSet<HistDatosPersonalesRRHH> HistDatosPersonalesRRHH { get; set; }
        public virtual DbSet<ModuloEverisRRHH> ModuloEverisRRHH { get; set; }
        public virtual DbSet<HistModuloEverisRRHH> HistModuloEverisRRHH { get; set; }
        public virtual DbSet<tbLiderProductoFile> tbLiderProductoFile { get; set; }
        public virtual DbSet<tbProductos> tbProductos { get; set; }
        public virtual DbSet<TbMallaTurnos> TbMallaTurnos { get; set; }
        public virtual DbSet<ProgramacionTurnos> ProgramacionTurnos { get; set; }
        public virtual DbSet<tbProcesosMasivos> tbProcesosMasivos { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CambioPassword(Nullable<int> usuario, string nuevoPass)
        {
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(int));
    
            var nuevoPassParameter = nuevoPass != null ?
                new ObjectParameter("NuevoPass", nuevoPass) :
                new ObjectParameter("NuevoPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CambioPassword", usuarioParameter, nuevoPassParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GuardarNuevoUsuario_Result> sp_GuardarNuevoUsuario(Nullable<decimal> idUsuario, string nombre, Nullable<int> rol, Nullable<bool> activo, string contrasenaDefault)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            var contrasenaDefaultParameter = contrasenaDefault != null ?
                new ObjectParameter("ContrasenaDefault", contrasenaDefault) :
                new ObjectParameter("ContrasenaDefault", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GuardarNuevoUsuario_Result>("sp_GuardarNuevoUsuario", idUsuarioParameter, nombreParameter, rolParameter, activoParameter, contrasenaDefaultParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_ValidarMobilePIN_Result> sp_ValidarMobilePIN(Nullable<decimal> idUsuario, string pin)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(decimal));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ValidarMobilePIN_Result>("sp_ValidarMobilePIN", idUsuarioParameter, pinParameter);
        }
    
        public virtual ObjectResult<spCamposDelFormulario_Result> spCamposDelFormulario(Nullable<int> idFormulario, Nullable<int> idCampoCompuesto)
        {
            var idFormularioParameter = idFormulario.HasValue ?
                new ObjectParameter("IdFormulario", idFormulario) :
                new ObjectParameter("IdFormulario", typeof(int));
    
            var idCampoCompuestoParameter = idCampoCompuesto.HasValue ?
                new ObjectParameter("IdCampoCompuesto", idCampoCompuesto) :
                new ObjectParameter("IdCampoCompuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCamposDelFormulario_Result>("spCamposDelFormulario", idFormularioParameter, idCampoCompuestoParameter);
        }
    
        public virtual ObjectResult<spCasoPrioritario_Result> spCasoPrioritario(string nomProceso, Nullable<int> noCaso, string nivel, string idLider, Nullable<int> idProceso, Nullable<int> monto)
        {
            var nomProcesoParameter = nomProceso != null ?
                new ObjectParameter("nomProceso", nomProceso) :
                new ObjectParameter("nomProceso", typeof(string));
    
            var noCasoParameter = noCaso.HasValue ?
                new ObjectParameter("noCaso", noCaso) :
                new ObjectParameter("noCaso", typeof(int));
    
            var nivelParameter = nivel != null ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(string));
    
            var idLiderParameter = idLider != null ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(string));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCasoPrioritario_Result>("spCasoPrioritario", nomProcesoParameter, noCasoParameter, nivelParameter, idLiderParameter, idProcesoParameter, montoParameter);
        }
    
        public virtual ObjectResult<spConsultarHijos_Result> spConsultarHijos(Nullable<int> idPadre)
        {
            var idPadreParameter = idPadre.HasValue ?
                new ObjectParameter("idPadre", idPadre) :
                new ObjectParameter("idPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarHijos_Result>("spConsultarHijos", idPadreParameter);
        }
    
        public virtual int spEliminarFunciApoyo(string identFuncionario)
        {
            var identFuncionarioParameter = identFuncionario != null ?
                new ObjectParameter("identFuncionario", identFuncionario) :
                new ObjectParameter("identFuncionario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarFunciApoyo", identFuncionarioParameter);
        }
    
        public virtual ObjectResult<spEliminarNivelFunc_Result> spEliminarNivelFunc(string identFuncionario, string nivelClasificacion, Nullable<int> proceso)
        {
            var identFuncionarioParameter = identFuncionario != null ?
                new ObjectParameter("identFuncionario", identFuncionario) :
                new ObjectParameter("identFuncionario", typeof(string));
    
            var nivelClasificacionParameter = nivelClasificacion != null ?
                new ObjectParameter("NivelClasificacion", nivelClasificacion) :
                new ObjectParameter("NivelClasificacion", typeof(string));
    
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarNivelFunc_Result>("spEliminarNivelFunc", identFuncionarioParameter, nivelClasificacionParameter, procesoParameter);
        }
    
        public virtual ObjectResult<spFuncionarioApoyo_Result> spFuncionarioApoyo(string identLider)
        {
            var identLiderParameter = identLider != null ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFuncionarioApoyo_Result>("spFuncionarioApoyo", identLiderParameter);
        }
    
        public virtual ObjectResult<spInsertaFuncionario_Result> spInsertaFuncionario(Nullable<int> idLider, string nombreCompleto, string cedula, Nullable<int> idProceso)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertaFuncionario_Result>("spInsertaFuncionario", idLiderParameter, nombreCompletoParameter, cedulaParameter, idProcesoParameter);
        }
    
        public virtual ObjectResult<spInsertNivelFunc_Result> spInsertNivelFunc(string identFuncionario, string nivelClasificacion, Nullable<int> proceso)
        {
            var identFuncionarioParameter = identFuncionario != null ?
                new ObjectParameter("identFuncionario", identFuncionario) :
                new ObjectParameter("identFuncionario", typeof(string));
    
            var nivelClasificacionParameter = nivelClasificacion != null ?
                new ObjectParameter("NivelClasificacion", nivelClasificacion) :
                new ObjectParameter("NivelClasificacion", typeof(string));
    
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertNivelFunc_Result>("spInsertNivelFunc", identFuncionarioParameter, nivelClasificacionParameter, procesoParameter);
        }
    
        public virtual ObjectResult<spObtenerLideres_Result> spObtenerLideres(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerLideres_Result>("spObtenerLideres", idParameter);
        }
    
        public virtual ObjectResult<spObtenerMenuHijosPerfil_Result> spObtenerMenuHijosPerfil(Nullable<int> idPadre, Nullable<int> rol)
        {
            var idPadreParameter = idPadre.HasValue ?
                new ObjectParameter("IdPadre", idPadre) :
                new ObjectParameter("IdPadre", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerMenuHijosPerfil_Result>("spObtenerMenuHijosPerfil", idPadreParameter, rolParameter);
        }
    
        public virtual ObjectResult<spObtenerMenuNietosPerfil_Result> spObtenerMenuNietosPerfil(Nullable<int> idHijo, Nullable<int> rol)
        {
            var idHijoParameter = idHijo.HasValue ?
                new ObjectParameter("IdHijo", idHijo) :
                new ObjectParameter("IdHijo", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerMenuNietosPerfil_Result>("spObtenerMenuNietosPerfil", idHijoParameter, rolParameter);
        }
    
        public virtual ObjectResult<spObtenerMenuPadre_Result> spObtenerMenuPadre(Nullable<decimal> usuario)
        {
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerMenuPadre_Result>("spObtenerMenuPadre", usuarioParameter);
        }
    
        public virtual ObjectResult<spObtenerNombreUsu_Result> spObtenerNombreUsu(Nullable<decimal> idusuario)
        {
            var idusuarioParameter = idusuario.HasValue ?
                new ObjectParameter("Idusuario", idusuario) :
                new ObjectParameter("Idusuario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerNombreUsu_Result>("spObtenerNombreUsu", idusuarioParameter);
        }
    
        public virtual ObjectResult<string> spValidarUsuario(string usuario, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spValidarUsuario", usuarioParameter, claveParameter);
        }
    
        public virtual ObjectResult<spObtenerNombreProceso_Result> spObtenerNombreProceso(string idProcdeso)
        {
            var idProcdesoParameter = idProcdeso != null ?
                new ObjectParameter("idProcdeso", idProcdeso) :
                new ObjectParameter("idProcdeso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerNombreProceso_Result>("spObtenerNombreProceso", idProcdesoParameter);
        }
    
        public virtual ObjectResult<spAsignacionAut_Result> spAsignacionAut(Nullable<int> idProceso, string identLider)
        {
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            var identLiderParameter = identLider != null ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAsignacionAut_Result>("spAsignacionAut", idProcesoParameter, identLiderParameter);
        }
    
        public virtual ObjectResult<spAsignacionManual_Result> spAsignacionManual(string identFuncinario, Nullable<int> nCaso, Nullable<int> idProceso)
        {
            var identFuncinarioParameter = identFuncinario != null ?
                new ObjectParameter("identFuncinario", identFuncinario) :
                new ObjectParameter("identFuncinario", typeof(string));
    
            var nCasoParameter = nCaso.HasValue ?
                new ObjectParameter("nCaso", nCaso) :
                new ObjectParameter("nCaso", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAsignacionManual_Result>("spAsignacionManual", identFuncinarioParameter, nCasoParameter, idProcesoParameter);
        }
    
        public virtual ObjectResult<string> spCambiarEstadoUsuarioLive(Nullable<int> ced, Nullable<int> estado)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spCambiarEstadoUsuarioLive", cedParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spObtieneFuncXlider_Result> spObtieneFuncXlider(string identLider)
        {
            var identLiderParameter = identLider != null ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtieneFuncXlider_Result>("spObtieneFuncXlider", identLiderParameter);
        }
    
        public virtual ObjectResult<spLideresAasignar_Result> spLideresAasignar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLideresAasignar_Result>("spLideresAasignar");
        }
    
        public virtual ObjectResult<Nullable<int>> spObtenerCasoUsuario(Nullable<int> ced)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spObtenerCasoUsuario", cedParameter);
        }
    
        public virtual ObjectResult<spObtenerEstadoUsuario_Result> spObtenerEstadoUsuario(Nullable<int> ced)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerEstadoUsuario_Result>("spObtenerEstadoUsuario", cedParameter);
        }
    
        public virtual ObjectResult<spPruebaAsigna_Result> spPruebaAsigna(Nullable<int> idProceso, string identLider)
        {
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            var identLiderParameter = identLider != null ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPruebaAsigna_Result>("spPruebaAsigna", idProcesoParameter, identLiderParameter);
        }
    
        public virtual int spCambiarEstadoCaso(Nullable<int> ced, Nullable<int> ncaso, Nullable<int> estado)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            var ncasoParameter = ncaso.HasValue ?
                new ObjectParameter("Ncaso", ncaso) :
                new ObjectParameter("Ncaso", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCambiarEstadoCaso", cedParameter, ncasoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spConsultarCasosSuspendidos(Nullable<int> ced)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spConsultarCasosSuspendidos", cedParameter);
        }
    
        public virtual ObjectResult<spConsultarCasosEnCola_Result> spConsultarCasosEnCola(Nullable<int> ced)
        {
            var cedParameter = ced.HasValue ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarCasosEnCola_Result>("spConsultarCasosEnCola", cedParameter);
        }
    
        public virtual ObjectResult<spUsuariosAplicacion_Result> spUsuariosAplicacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUsuariosAplicacion_Result>("spUsuariosAplicacion");
        }
    
        public virtual ObjectResult<sp_ActualizarUsuario_Result> sp_ActualizarUsuario(Nullable<int> idUsuario, string nombre, Nullable<int> rol)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ActualizarUsuario_Result>("sp_ActualizarUsuario", idUsuarioParameter, nombreParameter, rolParameter);
        }
    
        public virtual ObjectResult<sp_EstadoUsuario_Result> sp_EstadoUsuario(Nullable<decimal> idUsuario, Nullable<bool> estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EstadoUsuario_Result>("sp_EstadoUsuario", idUsuarioParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spObtenerRoles_Result> spObtenerRoles(Nullable<int> activo)
        {
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerRoles_Result>("spObtenerRoles", activoParameter);
        }
    
        public virtual int spUpdateRoles(Nullable<int> idRol, Nullable<int> activo)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRoles", idRolParameter, activoParameter);
        }
    
        public virtual ObjectResult<spCrearNuevoRol_Result> spCrearNuevoRol(string rol)
        {
            var rolParameter = rol != null ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCrearNuevoRol_Result>("spCrearNuevoRol", rolParameter);
        }
    
        public virtual int sp_regitroauditconex(string idUsuario, Nullable<int> idEstado, Nullable<int> idAusente)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idAusenteParameter = idAusente.HasValue ?
                new ObjectParameter("IdAusente", idAusente) :
                new ObjectParameter("IdAusente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_regitroauditconex", idUsuarioParameter, idEstadoParameter, idAusenteParameter);
        }
    
        public virtual ObjectResult<spUpdateDescRol_Result> spUpdateDescRol(Nullable<int> idRol, string desRol)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var desRolParameter = desRol != null ?
                new ObjectParameter("DesRol", desRol) :
                new ObjectParameter("DesRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdateDescRol_Result>("spUpdateDescRol", idRolParameter, desRolParameter);
        }
    
        public virtual ObjectResult<spObtenerMenuRol_Result> spObtenerMenuRol(Nullable<int> rolId, Nullable<int> estado)
        {
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerMenuRol_Result>("spObtenerMenuRol", rolIdParameter, estadoParameter);
        }
    
        public virtual int spActualizarMenuRol(Nullable<int> idRol, Nullable<int> idMenu, Nullable<int> estado)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("IdMenu", idMenu) :
                new ObjectParameter("IdMenu", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizarMenuRol", idRolParameter, idMenuParameter, estadoParameter);
        }
    
        public virtual ObjectResult<sptip_ausentismo_Result> sptip_ausentismo(string ced)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sptip_ausentismo_Result>("sptip_ausentismo", cedParameter);
        }
    
        public virtual ObjectResult<spResetearUsuario_Result> spResetearUsuario(Nullable<decimal> idUsuario, string contrasenaDefault)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(decimal));
    
            var contrasenaDefaultParameter = contrasenaDefault != null ?
                new ObjectParameter("ContrasenaDefault", contrasenaDefault) :
                new ObjectParameter("ContrasenaDefault", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spResetearUsuario_Result>("spResetearUsuario", idUsuarioParameter, contrasenaDefaultParameter);
        }
    
        public virtual ObjectResult<spVerificaCaso_Result> spVerificaCaso(Nullable<int> caso)
        {
            var casoParameter = caso.HasValue ?
                new ObjectParameter("Caso", caso) :
                new ObjectParameter("Caso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVerificaCaso_Result>("spVerificaCaso", casoParameter);
        }
    
        public virtual ObjectResult<spObtenerNiveles_Result> spObtenerNiveles(Nullable<int> idproceso)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("idproceso", idproceso) :
                new ObjectParameter("idproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerNiveles_Result>("spObtenerNiveles", idprocesoParameter);
        }
    
        public virtual ObjectResult<spObtenerNombreCaso_Result> spObtenerNombreCaso(Nullable<int> idproceso)
        {
            var idprocesoParameter = idproceso.HasValue ?
                new ObjectParameter("idproceso", idproceso) :
                new ObjectParameter("idproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerNombreCaso_Result>("spObtenerNombreCaso", idprocesoParameter);
        }
    
        public virtual int spRegistrarHoraFinCaso(string ced, Nullable<int> radicado)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            var radicadoParameter = radicado.HasValue ?
                new ObjectParameter("radicado", radicado) :
                new ObjectParameter("radicado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRegistrarHoraFinCaso", cedParameter, radicadoParameter);
        }
    
        public virtual ObjectResult<spVerCasosEnCola_Result> spVerCasosEnCola(Nullable<int> idLider, Nullable<int> proceso)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spVerCasosEnCola_Result>("spVerCasosEnCola", idLiderParameter, procesoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ContadorTotalCasos(string idusuario, Nullable<int> proceso)
        {
            var idusuarioParameter = idusuario != null ?
                new ObjectParameter("idusuario", idusuario) :
                new ObjectParameter("idusuario", typeof(string));
    
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ContadorTotalCasos", idusuarioParameter, procesoParameter);
        }
    
        public virtual ObjectResult<string> spConsultaConexion(string ced)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spConsultaConexion", cedParameter);
        }
    
        public virtual ObjectResult<spConsultaLideresEverPro_Result> spConsultaLideresEverPro(Nullable<int> perfil)
        {
            var perfilParameter = perfil.HasValue ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaLideresEverPro_Result>("spConsultaLideresEverPro", perfilParameter);
        }
    
        public virtual ObjectResult<spConsultaNivelEverPro_Result> spConsultaNivelEverPro(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaNivelEverPro_Result>("spConsultaNivelEverPro", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spInsertaDatosPersonal_Result> spInsertaDatosPersonal(Nullable<int> cedula, string nombreCompleto, Nullable<System.DateTime> fechaNacimiento, string edad, string telefonoCelular, string telefonoContato, string direccion, Nullable<int> idMotivoIngreso, Nullable<int> idTipoDocumento, Nullable<int> idGenero, Nullable<int> idCiudad, Nullable<int> idLocalidad, Nullable<int> idCarreraEducativa)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("TelefonoCelular", telefonoCelular) :
                new ObjectParameter("TelefonoCelular", typeof(string));
    
            var telefonoContatoParameter = telefonoContato != null ?
                new ObjectParameter("TelefonoContato", telefonoContato) :
                new ObjectParameter("TelefonoContato", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idMotivoIngresoParameter = idMotivoIngreso.HasValue ?
                new ObjectParameter("IdMotivoIngreso", idMotivoIngreso) :
                new ObjectParameter("IdMotivoIngreso", typeof(int));
    
            var idTipoDocumentoParameter = idTipoDocumento.HasValue ?
                new ObjectParameter("IdTipoDocumento", idTipoDocumento) :
                new ObjectParameter("IdTipoDocumento", typeof(int));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idCiudadParameter = idCiudad.HasValue ?
                new ObjectParameter("IdCiudad", idCiudad) :
                new ObjectParameter("IdCiudad", typeof(int));
    
            var idLocalidadParameter = idLocalidad.HasValue ?
                new ObjectParameter("IdLocalidad", idLocalidad) :
                new ObjectParameter("IdLocalidad", typeof(int));
    
            var idCarreraEducativaParameter = idCarreraEducativa.HasValue ?
                new ObjectParameter("IdCarreraEducativa", idCarreraEducativa) :
                new ObjectParameter("IdCarreraEducativa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertaDatosPersonal_Result>("spInsertaDatosPersonal", cedulaParameter, nombreCompletoParameter, fechaNacimientoParameter, edadParameter, telefonoCelularParameter, telefonoContatoParameter, direccionParameter, idMotivoIngresoParameter, idTipoDocumentoParameter, idGeneroParameter, idCiudadParameter, idLocalidadParameter, idCarreraEducativaParameter);
        }
    
        public virtual ObjectResult<spInsertaModuloEverPro_Result> spInsertaModuloEverPro(Nullable<int> cedula, Nullable<int> idHC, Nullable<int> idRol, Nullable<int> codigoDeEmpleado, Nullable<int> cedJefe, Nullable<int> cedPsl, Nullable<int> cedPtl, Nullable<int> cedPsc, Nullable<int> idArea, Nullable<int> idProceso, Nullable<int> idClasificacion, Nullable<int> idLugarDeTrabajo, Nullable<int> idTurno, Nullable<int> cedLiderSGD)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var idHCParameter = idHC.HasValue ?
                new ObjectParameter("IdHC", idHC) :
                new ObjectParameter("IdHC", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var codigoDeEmpleadoParameter = codigoDeEmpleado.HasValue ?
                new ObjectParameter("CodigoDeEmpleado", codigoDeEmpleado) :
                new ObjectParameter("CodigoDeEmpleado", typeof(int));
    
            var cedJefeParameter = cedJefe.HasValue ?
                new ObjectParameter("CedJefe", cedJefe) :
                new ObjectParameter("CedJefe", typeof(int));
    
            var cedPslParameter = cedPsl.HasValue ?
                new ObjectParameter("CedPsl", cedPsl) :
                new ObjectParameter("CedPsl", typeof(int));
    
            var cedPtlParameter = cedPtl.HasValue ?
                new ObjectParameter("CedPtl", cedPtl) :
                new ObjectParameter("CedPtl", typeof(int));
    
            var cedPscParameter = cedPsc.HasValue ?
                new ObjectParameter("CedPsc", cedPsc) :
                new ObjectParameter("CedPsc", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("IdProceso", idProceso) :
                new ObjectParameter("IdProceso", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var idLugarDeTrabajoParameter = idLugarDeTrabajo.HasValue ?
                new ObjectParameter("IdLugarDeTrabajo", idLugarDeTrabajo) :
                new ObjectParameter("IdLugarDeTrabajo", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var cedLiderSGDParameter = cedLiderSGD.HasValue ?
                new ObjectParameter("CedLiderSGD", cedLiderSGD) :
                new ObjectParameter("CedLiderSGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertaModuloEverPro_Result>("spInsertaModuloEverPro", cedulaParameter, idHCParameter, idRolParameter, codigoDeEmpleadoParameter, cedJefeParameter, cedPslParameter, cedPtlParameter, cedPscParameter, idAreaParameter, idProcesoParameter, idClasificacionParameter, idLugarDeTrabajoParameter, idTurnoParameter, cedLiderSGDParameter);
        }
    
        public virtual int spObtenerEstadisticaCasos(Nullable<int> lider)
        {
            var liderParameter = lider.HasValue ?
                new ObjectParameter("lider", lider) :
                new ObjectParameter("lider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spObtenerEstadisticaCasos", liderParameter);
        }
    
        public virtual ObjectResult<spObtenerlinkyTiempo_Result> spObtenerlinkyTiempo(string ced)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerlinkyTiempo_Result>("spObtenerlinkyTiempo", cedParameter);
        }
    
        public virtual ObjectResult<spObtenerSuspendidosAntara_Result> spObtenerSuspendidosAntara(Nullable<int> idLider, Nullable<int> idProceso)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerSuspendidosAntara_Result>("spObtenerSuspendidosAntara", idLiderParameter, idProcesoParameter);
        }
    
        public virtual int spObtenerTipoIngreso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spObtenerTipoIngreso");
        }
    
        public virtual ObjectResult<spValidaConexionesFunc_Result> spValidaConexionesFunc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaConexionesFunc_Result>("spValidaConexionesFunc");
        }
    
        public virtual ObjectResult<string> spValidaEstadoCasoSGD(string ced, Nullable<int> radicado)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            var radicadoParameter = radicado.HasValue ?
                new ObjectParameter("radicado", radicado) :
                new ObjectParameter("radicado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spValidaEstadoCasoSGD", cedParameter, radicadoParameter);
        }
    
        public virtual ObjectResult<string> spValidaEstadoCasoSuspendSGD(string ced, Nullable<int> radicado)
        {
            var cedParameter = ced != null ?
                new ObjectParameter("ced", ced) :
                new ObjectParameter("ced", typeof(string));
    
            var radicadoParameter = radicado.HasValue ?
                new ObjectParameter("radicado", radicado) :
                new ObjectParameter("radicado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spValidaEstadoCasoSuspendSGD", cedParameter, radicadoParameter);
        }
    
        public virtual int sp_ObtenerConsecutivo(string conCodigo)
        {
            var conCodigoParameter = conCodigo != null ?
                new ObjectParameter("ConCodigo", conCodigo) :
                new ObjectParameter("ConCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ObtenerConsecutivo", conCodigoParameter);
        }
    
        public virtual int spDetalleListaDescripcion(Nullable<int> detalles_ListaId)
        {
            var detalles_ListaIdParameter = detalles_ListaId.HasValue ?
                new ObjectParameter("Detalles_ListaId", detalles_ListaId) :
                new ObjectParameter("Detalles_ListaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDetalleListaDescripcion", detalles_ListaIdParameter);
        }
    
        public virtual ObjectResult<spInsertaModuloEveris_Result> spInsertaModuloEveris(Nullable<int> cedula, Nullable<int> empresa, Nullable<System.DateTime> fecContratacionTemporal, Nullable<System.DateTime> fecContratacionEveris, string salarioEveris, Nullable<int> csrGeco, Nullable<int> pais, Nullable<int> cliente, Nullable<int> proyecto, Nullable<int> cargo, Nullable<int> categoria, Nullable<int> nivel)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            var fecContratacionTemporalParameter = fecContratacionTemporal.HasValue ?
                new ObjectParameter("FecContratacionTemporal", fecContratacionTemporal) :
                new ObjectParameter("FecContratacionTemporal", typeof(System.DateTime));
    
            var fecContratacionEverisParameter = fecContratacionEveris.HasValue ?
                new ObjectParameter("FecContratacionEveris", fecContratacionEveris) :
                new ObjectParameter("FecContratacionEveris", typeof(System.DateTime));
    
            var salarioEverisParameter = salarioEveris != null ?
                new ObjectParameter("SalarioEveris", salarioEveris) :
                new ObjectParameter("SalarioEveris", typeof(string));
    
            var csrGecoParameter = csrGeco.HasValue ?
                new ObjectParameter("CsrGeco", csrGeco) :
                new ObjectParameter("CsrGeco", typeof(int));
    
            var paisParameter = pais.HasValue ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(int));
    
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(int));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(int));
    
            var cargoParameter = cargo.HasValue ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(int));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertaModuloEveris_Result>("spInsertaModuloEveris", cedulaParameter, empresaParameter, fecContratacionTemporalParameter, fecContratacionEverisParameter, salarioEverisParameter, csrGecoParameter, paisParameter, clienteParameter, proyectoParameter, cargoParameter, categoriaParameter, nivelParameter);
        }
    
        public virtual ObjectResult<spConsultaLocalidades_Result> spConsultaLocalidades()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaLocalidades_Result>("spConsultaLocalidades");
        }
    
        public virtual ObjectResult<spClasificacionNivelPorFunc_Result> spClasificacionNivelPorFunc(string identFunc, Nullable<int> opcion, Nullable<int> proceso, Nullable<int> idLider)
        {
            var identFuncParameter = identFunc != null ?
                new ObjectParameter("identFunc", identFunc) :
                new ObjectParameter("identFunc", typeof(string));
    
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(int));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spClasificacionNivelPorFunc_Result>("spClasificacionNivelPorFunc", identFuncParameter, opcionParameter, procesoParameter, idLiderParameter);
        }
    
        public virtual ObjectResult<spConsultaModuloEveris_Result> spConsultaModuloEveris(Nullable<int> cedfuncionario)
        {
            var cedfuncionarioParameter = cedfuncionario.HasValue ?
                new ObjectParameter("Cedfuncionario", cedfuncionario) :
                new ObjectParameter("Cedfuncionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaModuloEveris_Result>("spConsultaModuloEveris", cedfuncionarioParameter);
        }
    
        public virtual ObjectResult<OptenerProducto_Result> OptenerProducto(Nullable<int> codigoPadre)
        {
            var codigoPadreParameter = codigoPadre.HasValue ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OptenerProducto_Result>("OptenerProducto", codigoPadreParameter);
        }
    
        public virtual ObjectResult<LiderPorProducto_Result> LiderPorProducto(Nullable<int> codProd, Nullable<int> campList)
        {
            var codProdParameter = codProd.HasValue ?
                new ObjectParameter("CodProd", codProd) :
                new ObjectParameter("CodProd", typeof(int));
    
            var campListParameter = campList.HasValue ?
                new ObjectParameter("CampList", campList) :
                new ObjectParameter("CampList", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiderPorProducto_Result>("LiderPorProducto", codProdParameter, campListParameter);
        }
    
        public virtual ObjectResult<ObtenerNombFile_Result> ObtenerNombFile(Nullable<int> codProd, Nullable<int> camlist)
        {
            var codProdParameter = codProd.HasValue ?
                new ObjectParameter("CodProd", codProd) :
                new ObjectParameter("CodProd", typeof(int));
    
            var camlistParameter = camlist.HasValue ?
                new ObjectParameter("Camlist", camlist) :
                new ObjectParameter("Camlist", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerNombFile_Result>("ObtenerNombFile", codProdParameter, camlistParameter);
        }
    
        public virtual ObjectResult<spListaColas_Result> spListaColas(Nullable<int> idProceso, string idLider)
        {
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            var idLiderParameter = idLider != null ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaColas_Result>("spListaColas", idProcesoParameter, idLiderParameter);
        }
    
        public virtual ObjectResult<spObtenerItemsListaCampo_Result> spObtenerItemsListaCampo(Nullable<int> idCampo, string idCampo_Lista, string cuotaAnio, string segmento)
        {
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var idCampo_ListaParameter = idCampo_Lista != null ?
                new ObjectParameter("IdCampo_Lista", idCampo_Lista) :
                new ObjectParameter("IdCampo_Lista", typeof(string));
    
            var cuotaAnioParameter = cuotaAnio != null ?
                new ObjectParameter("CuotaAnio", cuotaAnio) :
                new ObjectParameter("CuotaAnio", typeof(string));
    
            var segmentoParameter = segmento != null ?
                new ObjectParameter("Segmento", segmento) :
                new ObjectParameter("Segmento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerItemsListaCampo_Result>("spObtenerItemsListaCampo", idCampoParameter, idCampo_ListaParameter, cuotaAnioParameter, segmentoParameter);
        }
    
        public virtual int InsertarTiemposConexionSGD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTiemposConexionSGD");
        }
    
        public virtual int spInsertarTiemposConexion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTiemposConexion");
        }
    
        public virtual ObjectResult<BtnDactiloscopia_Result> BtnDactiloscopia(Nullable<int> idLider)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BtnDactiloscopia_Result>("BtnDactiloscopia", idLiderParameter);
        }
    
        public virtual ObjectResult<spConsultaModuloEverProLideres_Result> spConsultaModuloEverProLideres(Nullable<int> cedfuncionario)
        {
            var cedfuncionarioParameter = cedfuncionario.HasValue ?
                new ObjectParameter("Cedfuncionario", cedfuncionario) :
                new ObjectParameter("Cedfuncionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaModuloEverProLideres_Result>("spConsultaModuloEverProLideres", cedfuncionarioParameter);
        }
    
        public virtual ObjectResult<trazaFuncCasos_Result> trazaFuncCasos(Nullable<int> identLider)
        {
            var identLiderParameter = identLider.HasValue ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trazaFuncCasos_Result>("trazaFuncCasos", identLiderParameter);
        }
    
        public virtual ObjectResult<spConsultaFuncionariosEverPro_Result> spConsultaFuncionariosEverPro(Nullable<int> cedfuncionario)
        {
            var cedfuncionarioParameter = cedfuncionario.HasValue ?
                new ObjectParameter("Cedfuncionario", cedfuncionario) :
                new ObjectParameter("Cedfuncionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaFuncionariosEverPro_Result>("spConsultaFuncionariosEverPro", cedfuncionarioParameter);
        }
    
        public virtual ObjectResult<spActualizacionMasiva_Result> spActualizacionMasiva(Nullable<int> cedLiderSGDAct, string cedLiderSGDNuevo, Nullable<int> cedFunc, string nuevoSalario, Nullable<int> tipoActualizacion)
        {
            var cedLiderSGDActParameter = cedLiderSGDAct.HasValue ?
                new ObjectParameter("CedLiderSGDAct", cedLiderSGDAct) :
                new ObjectParameter("CedLiderSGDAct", typeof(int));
    
            var cedLiderSGDNuevoParameter = cedLiderSGDNuevo != null ?
                new ObjectParameter("CedLiderSGDNuevo", cedLiderSGDNuevo) :
                new ObjectParameter("CedLiderSGDNuevo", typeof(string));
    
            var cedFuncParameter = cedFunc.HasValue ?
                new ObjectParameter("CedFunc", cedFunc) :
                new ObjectParameter("CedFunc", typeof(int));
    
            var nuevoSalarioParameter = nuevoSalario != null ?
                new ObjectParameter("NuevoSalario", nuevoSalario) :
                new ObjectParameter("NuevoSalario", typeof(string));
    
            var tipoActualizacionParameter = tipoActualizacion.HasValue ?
                new ObjectParameter("TipoActualizacion", tipoActualizacion) :
                new ObjectParameter("TipoActualizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizacionMasiva_Result>("spActualizacionMasiva", cedLiderSGDActParameter, cedLiderSGDNuevoParameter, cedFuncParameter, nuevoSalarioParameter, tipoActualizacionParameter);
        }
    
        public virtual int spActualizaDatosPersonal(Nullable<int> cedula, string nombreCompleto, Nullable<System.DateTime> fechaNacimiento, string edad, string telefonoCelular, string telefonoContato, string direccion, Nullable<int> idMotivoIngreso, Nullable<int> idTipoDocumento, Nullable<int> idGenero, Nullable<int> idCiudad, Nullable<int> idLocalidad, Nullable<int> idCarreraEducativa)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("TelefonoCelular", telefonoCelular) :
                new ObjectParameter("TelefonoCelular", typeof(string));
    
            var telefonoContatoParameter = telefonoContato != null ?
                new ObjectParameter("TelefonoContato", telefonoContato) :
                new ObjectParameter("TelefonoContato", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var idMotivoIngresoParameter = idMotivoIngreso.HasValue ?
                new ObjectParameter("IdMotivoIngreso", idMotivoIngreso) :
                new ObjectParameter("IdMotivoIngreso", typeof(int));
    
            var idTipoDocumentoParameter = idTipoDocumento.HasValue ?
                new ObjectParameter("IdTipoDocumento", idTipoDocumento) :
                new ObjectParameter("IdTipoDocumento", typeof(int));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idCiudadParameter = idCiudad.HasValue ?
                new ObjectParameter("IdCiudad", idCiudad) :
                new ObjectParameter("IdCiudad", typeof(int));
    
            var idLocalidadParameter = idLocalidad.HasValue ?
                new ObjectParameter("IdLocalidad", idLocalidad) :
                new ObjectParameter("IdLocalidad", typeof(int));
    
            var idCarreraEducativaParameter = idCarreraEducativa.HasValue ?
                new ObjectParameter("IdCarreraEducativa", idCarreraEducativa) :
                new ObjectParameter("IdCarreraEducativa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizaDatosPersonal", cedulaParameter, nombreCompletoParameter, fechaNacimientoParameter, edadParameter, telefonoCelularParameter, telefonoContatoParameter, direccionParameter, idMotivoIngresoParameter, idTipoDocumentoParameter, idGeneroParameter, idCiudadParameter, idLocalidadParameter, idCarreraEducativaParameter);
        }
    
        public virtual int spActualizaModuloEveris(Nullable<int> cedula, Nullable<int> empresa, Nullable<System.DateTime> fecContratacionTemporal, Nullable<System.DateTime> fecContratacionEveris, string salarioEveris, Nullable<int> csrGeco, Nullable<int> pais, Nullable<int> cliente, Nullable<int> proyecto, Nullable<int> cargo, Nullable<int> categoria, Nullable<int> nivel)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            var fecContratacionTemporalParameter = fecContratacionTemporal.HasValue ?
                new ObjectParameter("FecContratacionTemporal", fecContratacionTemporal) :
                new ObjectParameter("FecContratacionTemporal", typeof(System.DateTime));
    
            var fecContratacionEverisParameter = fecContratacionEveris.HasValue ?
                new ObjectParameter("FecContratacionEveris", fecContratacionEveris) :
                new ObjectParameter("FecContratacionEveris", typeof(System.DateTime));
    
            var salarioEverisParameter = salarioEveris != null ?
                new ObjectParameter("SalarioEveris", salarioEveris) :
                new ObjectParameter("SalarioEveris", typeof(string));
    
            var csrGecoParameter = csrGeco.HasValue ?
                new ObjectParameter("CsrGeco", csrGeco) :
                new ObjectParameter("CsrGeco", typeof(int));
    
            var paisParameter = pais.HasValue ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(int));
    
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(int));
    
            var proyectoParameter = proyecto.HasValue ?
                new ObjectParameter("Proyecto", proyecto) :
                new ObjectParameter("Proyecto", typeof(int));
    
            var cargoParameter = cargo.HasValue ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(int));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizaModuloEveris", cedulaParameter, empresaParameter, fecContratacionTemporalParameter, fecContratacionEverisParameter, salarioEverisParameter, csrGecoParameter, paisParameter, clienteParameter, proyectoParameter, cargoParameter, categoriaParameter, nivelParameter);
        }
    
        public virtual ObjectResult<spBuscarFuncionarios_Result> spBuscarFuncionarios(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBuscarFuncionarios_Result>("spBuscarFuncionarios", cedulaParameter);
        }
    
        public virtual ObjectResult<spConsultaCategoriaEverPro_Result> spConsultaCategoriaEverPro(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaCategoriaEverPro_Result>("spConsultaCategoriaEverPro", idEmpresaParameter);
        }
    
        public virtual ObjectResult<spConsultaDatosPersonales_Result> spConsultaDatosPersonales(Nullable<int> cedfuncionario)
        {
            var cedfuncionarioParameter = cedfuncionario.HasValue ?
                new ObjectParameter("Cedfuncionario", cedfuncionario) :
                new ObjectParameter("Cedfuncionario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaDatosPersonales_Result>("spConsultaDatosPersonales", cedfuncionarioParameter);
        }
    
        public virtual ObjectResult<spConsultaFuncMasivos_Result> spConsultaFuncMasivos(Nullable<int> area, Nullable<int> cedLider)
        {
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var cedLiderParameter = cedLider.HasValue ?
                new ObjectParameter("CedLider", cedLider) :
                new ObjectParameter("CedLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaFuncMasivos_Result>("spConsultaFuncMasivos", areaParameter, cedLiderParameter);
        }
    
        public virtual ObjectResult<CountFuncionariosEstado_Result> CountFuncionariosEstado(Nullable<int> idLider)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountFuncionariosEstado_Result>("CountFuncionariosEstado", idLiderParameter);
        }
    
        public virtual ObjectResult<ConteoCasos_Result> ConteoCasos(Nullable<int> idLider, string fechaIni, string fechaFin)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConteoCasos_Result>("ConteoCasos", idLiderParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<FuncionariosMallaTurnos_Result> FuncionariosMallaTurnos(Nullable<int> idLider)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FuncionariosMallaTurnos_Result>("FuncionariosMallaTurnos", idLiderParameter);
        }
    
        public virtual int MallaTurnos(Nullable<int> idFuncionario, Nullable<int> anio, Nullable<int> mes, Nullable<int> dia, Nullable<int> hora, Nullable<int> idLider, Nullable<int> turmo)
        {
            var idFuncionarioParameter = idFuncionario.HasValue ?
                new ObjectParameter("IdFuncionario", idFuncionario) :
                new ObjectParameter("IdFuncionario", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var turmoParameter = turmo.HasValue ?
                new ObjectParameter("turmo", turmo) :
                new ObjectParameter("turmo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MallaTurnos", idFuncionarioParameter, anioParameter, mesParameter, diaParameter, horaParameter, idLiderParameter, turmoParameter);
        }
    
        public virtual ObjectResult<PintaTurno_Result> PintaTurno(string identFuncionario)
        {
            var identFuncionarioParameter = identFuncionario != null ?
                new ObjectParameter("identFuncionario", identFuncionario) :
                new ObjectParameter("identFuncionario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaTurno_Result>("PintaTurno", identFuncionarioParameter);
        }
    
        public virtual ObjectResult<PintaMallaTurnos_Result> PintaMallaTurnos(Nullable<int> idLider, Nullable<int> dia, Nullable<int> mes, Nullable<int> anio)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMallaTurnos_Result>("PintaMallaTurnos", idLiderParameter, diaParameter, mesParameter, anioParameter);
        }
    
        public virtual ObjectResult<ProductividadDiaria_Result> ProductividadDiaria(Nullable<int> idLider, string fechaIni, string fechaFin)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductividadDiaria_Result>("ProductividadDiaria", idLiderParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<ProgramacionMallaTurnos_Result> ProgramacionMallaTurnos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramacionMallaTurnos_Result>("ProgramacionMallaTurnos");
        }
    
        public virtual int CrearProgramacionMallas(Nullable<int> idFuncionario, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var idFuncionarioParameter = idFuncionario.HasValue ?
                new ObjectParameter("IdFuncionario", idFuncionario) :
                new ObjectParameter("IdFuncionario", typeof(int));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearProgramacionMallas", idFuncionarioParameter, fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<InfoTurnos_Result> InfoTurnos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InfoTurnos_Result>("InfoTurnos");
        }
    
        public virtual ObjectResult<PintaMalla1_3_4_Result> PintaMalla1_3_4(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla1_3_4_Result>("PintaMalla1_3_4", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla5_6_8_Result> PintaMalla5_6_8(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla5_6_8_Result>("PintaMalla5_6_8", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_1_Result> PintaMalla_1(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_1_Result>("PintaMalla_1", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_3_Result> PintaMalla_3(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_3_Result>("PintaMalla_3", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_4_Result> PintaMalla_4(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_4_Result>("PintaMalla_4", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_8_Result> PintaMalla_8(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_8_Result>("PintaMalla_8", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla2_Result> PintaMalla2(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla2_Result>("PintaMalla2", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_5_Result> PintaMalla_5(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_5_Result>("PintaMalla_5", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla_6_Result> PintaMalla_6(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla_6_Result>("PintaMalla_6", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<PintaMalla9_Result> PintaMalla9(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idLider, Nullable<int> idTurno)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PintaMalla9_Result>("PintaMalla9", fechaDesdeParameter, fechaHastaParameter, idLiderParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<spListaColas2_Result> spListaColas2(Nullable<int> idProceso, string idLider)
        {
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("idProceso", idProceso) :
                new ObjectParameter("idProceso", typeof(int));
    
            var idLiderParameter = idLider != null ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListaColas2_Result>("spListaColas2", idProcesoParameter, idLiderParameter);
        }
    
        public virtual ObjectResult<trazaFuncCasos2_Result> trazaFuncCasos2(Nullable<int> identLider)
        {
            var identLiderParameter = identLider.HasValue ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trazaFuncCasos2_Result>("trazaFuncCasos2", identLiderParameter);
        }
    
        public virtual ObjectResult<SelectFuncionariosEstado_Result> SelectFuncionariosEstado(Nullable<int> idLider, Nullable<int> estado)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFuncionariosEstado_Result>("SelectFuncionariosEstado", idLiderParameter, estadoParameter);
        }
    
        public virtual int MallaTurnos1(Nullable<int> idFuncionario, Nullable<int> anio, Nullable<int> mes, Nullable<int> dia, Nullable<int> hora, Nullable<int> idLider, Nullable<int> turmo)
        {
            var idFuncionarioParameter = idFuncionario.HasValue ?
                new ObjectParameter("IdFuncionario", idFuncionario) :
                new ObjectParameter("IdFuncionario", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));
    
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("IdLider", idLider) :
                new ObjectParameter("IdLider", typeof(int));
    
            var turmoParameter = turmo.HasValue ?
                new ObjectParameter("turmo", turmo) :
                new ObjectParameter("turmo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MallaTurnos1", idFuncionarioParameter, anioParameter, mesParameter, diaParameter, horaParameter, idLiderParameter, turmoParameter);
        }
    
        public virtual int spActualizaModuloEverProLideres(Nullable<int> cedula, Nullable<int> idHC, Nullable<int> idRol, Nullable<int> codigoDeEmpleado, Nullable<int> cedJefe, Nullable<int> cedPsl, Nullable<int> cedPtl, Nullable<int> cedPsc, Nullable<int> idArea, Nullable<int> idProceso, Nullable<int> idClasificacion, Nullable<int> idLugarDeTrabajo, Nullable<int> idTurno, Nullable<int> cedLiderSGD)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var idHCParameter = idHC.HasValue ?
                new ObjectParameter("IdHC", idHC) :
                new ObjectParameter("IdHC", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var codigoDeEmpleadoParameter = codigoDeEmpleado.HasValue ?
                new ObjectParameter("CodigoDeEmpleado", codigoDeEmpleado) :
                new ObjectParameter("CodigoDeEmpleado", typeof(int));
    
            var cedJefeParameter = cedJefe.HasValue ?
                new ObjectParameter("CedJefe", cedJefe) :
                new ObjectParameter("CedJefe", typeof(int));
    
            var cedPslParameter = cedPsl.HasValue ?
                new ObjectParameter("CedPsl", cedPsl) :
                new ObjectParameter("CedPsl", typeof(int));
    
            var cedPtlParameter = cedPtl.HasValue ?
                new ObjectParameter("CedPtl", cedPtl) :
                new ObjectParameter("CedPtl", typeof(int));
    
            var cedPscParameter = cedPsc.HasValue ?
                new ObjectParameter("CedPsc", cedPsc) :
                new ObjectParameter("CedPsc", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("IdProceso", idProceso) :
                new ObjectParameter("IdProceso", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var idLugarDeTrabajoParameter = idLugarDeTrabajo.HasValue ?
                new ObjectParameter("IdLugarDeTrabajo", idLugarDeTrabajo) :
                new ObjectParameter("IdLugarDeTrabajo", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var cedLiderSGDParameter = cedLiderSGD.HasValue ?
                new ObjectParameter("CedLiderSGD", cedLiderSGD) :
                new ObjectParameter("CedLiderSGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizaModuloEverProLideres", cedulaParameter, idHCParameter, idRolParameter, codigoDeEmpleadoParameter, cedJefeParameter, cedPslParameter, cedPtlParameter, cedPscParameter, idAreaParameter, idProcesoParameter, idClasificacionParameter, idLugarDeTrabajoParameter, idTurnoParameter, cedLiderSGDParameter);
        }
    
        public virtual ObjectResult<string> spObtenerNombreLider(Nullable<int> idLider)
        {
            var idLiderParameter = idLider.HasValue ?
                new ObjectParameter("idLider", idLider) :
                new ObjectParameter("idLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spObtenerNombreLider", idLiderParameter);
        }
    
        public virtual ObjectResult<spObtenerPersonasPorLiderSGD_Result> spObtenerPersonasPorLiderSGD(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerPersonasPorLiderSGD_Result>("spObtenerPersonasPorLiderSGD", cedulaParameter);
        }
    
        public virtual int InsertarTiemposConexionSGD1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTiemposConexionSGD1");
        }
    
        public virtual ObjectResult<spCamposDelFormulario1_Result> spCamposDelFormulario1(Nullable<int> idFormulario, Nullable<int> idCampoCompuesto)
        {
            var idFormularioParameter = idFormulario.HasValue ?
                new ObjectParameter("IdFormulario", idFormulario) :
                new ObjectParameter("IdFormulario", typeof(int));
    
            var idCampoCompuestoParameter = idCampoCompuesto.HasValue ?
                new ObjectParameter("IdCampoCompuesto", idCampoCompuesto) :
                new ObjectParameter("IdCampoCompuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCamposDelFormulario1_Result>("spCamposDelFormulario1", idFormularioParameter, idCampoCompuestoParameter);
        }
    
        public virtual int spInsertarTiemposConexion1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTiemposConexion1");
        }
    
        public virtual ObjectResult<spObtenerFunColas_Result> spObtenerFunColas(Nullable<int> identLider)
        {
            var identLiderParameter = identLider.HasValue ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerFunColas_Result>("spObtenerFunColas", identLiderParameter);
        }
    
        public virtual ObjectResult<ConsultarEstadoSabans_Result> ConsultarEstadoSabans(Nullable<int> proceso, string identLider)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var identLiderParameter = identLider != null ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstadoSabans_Result>("ConsultarEstadoSabans", procesoParameter, identLiderParameter);
        }
    
        public virtual ObjectResult<trazaFuncCasosOptim_Result> trazaFuncCasosOptim(Nullable<int> identLider)
        {
            var identLiderParameter = identLider.HasValue ?
                new ObjectParameter("identLider", identLider) :
                new ObjectParameter("identLider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trazaFuncCasosOptim_Result>("trazaFuncCasosOptim", identLiderParameter);
        }
    }
}
